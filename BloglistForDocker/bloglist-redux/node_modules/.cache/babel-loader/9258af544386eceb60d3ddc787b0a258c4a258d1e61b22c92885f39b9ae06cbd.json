{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\n//import PropTypes from 'prop-types'\nimport { loginUser } from '../reducers/loginUserReducer';\nimport { setNotification } from '../reducers/notificationReducer';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Input, Button } from '../style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const userInput = {\n        username: username,\n        password: password\n      };\n      const result = await dispatch(loginUser(userInput));\n      setPassword('');\n      setUsername('');\n      dispatch(setNotification(`hi ${userInput.username}`, 'green', 5));\n      navigate('/');\n    } catch (e) {\n      dispatch(setNotification(`wrong username or password: ${e.message}`, 'red', 5));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"username\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"username\",\n          onChange: e => setUsername(e.target.value),\n          id: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"password\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value),\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        id: \"login-button\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n// LoginForm.propTypes = {\n//     handleSubmit: PropTypes.func.isRequired,\n//     handleUsernameChange: PropTypes.func.isRequired,\n//     handlePasswordChange: PropTypes.func.isRequired,\n//     username: PropTypes.string.isRequired,\n//     password: PropTypes.string.isRequired,\n// }\n_s(LoginForm, \"JuD1ADzf582t83x9sKGeFXBF+gQ=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["loginUser","setNotification","useDispatch","useState","useNavigate","Input","Button","LoginForm","password","setPassword","username","setUsername","dispatch","navigate","handleLogin","event","preventDefault","userInput","result","e","message","target","value"],"sources":["/usr/src/app/src/components/LoginForm.js"],"sourcesContent":["//import PropTypes from 'prop-types'\nimport { loginUser } from '../reducers/loginUserReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { useDispatch } from 'react-redux'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Input, Button } from '../style'\n\nconst LoginForm = () => {\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const userInput = {\n                username: username,\n                password: password,\n            }\n            const result = await dispatch(loginUser(userInput))\n            setPassword('')\n            setUsername('')\n            dispatch(setNotification(`hi ${userInput.username}`, 'green', 5))\n            navigate('/')\n        } catch (e) {\n            dispatch(\n                setNotification(\n                    `wrong username or password: ${e.message}`,\n                    'red',\n                    5\n                )\n            )\n        }\n    }\n    return (\n        <div>\n            <h2>Login</h2>\n\n            <form onSubmit={handleLogin}>\n                <div>\n                    username\n                    <Input\n                        type=\"text\"\n                        name=\"username\"\n                        onChange={(e) => setUsername(e.target.value)}\n                        id=\"username\"\n                    />\n                </div>\n                <div>\n                    password\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                        id=\"password\"\n                    />\n                </div>\n                <Button type=\"submit\" id=\"login-button\">\n                    login\n                </Button>\n            </form>\n        </div>\n    )\n}\n\n// LoginForm.propTypes = {\n//     handleSubmit: PropTypes.func.isRequired,\n//     handleUsernameChange: PropTypes.func.isRequired,\n//     handlePasswordChange: PropTypes.func.isRequired,\n//     username: PropTypes.string.isRequired,\n//     password: PropTypes.string.isRequired,\n// }\n\nexport default LoginForm\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,8BAA8B;AACxD,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,EAAEC,MAAM,QAAQ,UAAU;AAAA;AAExC,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,QAAQ,GAAGT,WAAW,EAAE;EAE9B,MAAMU,WAAW,GAAG,MAAOC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAI;MACA,MAAMC,SAAS,GAAG;QACdP,QAAQ,EAAEA,QAAQ;QAClBF,QAAQ,EAAEA;MACd,CAAC;MACD,MAAMU,MAAM,GAAG,MAAMN,QAAQ,CAACZ,SAAS,CAACiB,SAAS,CAAC,CAAC;MACnDR,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;MACfC,QAAQ,CAACX,eAAe,CAAE,MAAKgB,SAAS,CAACP,QAAS,EAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;MACjEG,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOM,CAAC,EAAE;MACRP,QAAQ,CACJX,eAAe,CACV,+BAA8BkB,CAAC,CAACC,OAAQ,EAAC,EAC1C,KAAK,EACL,CAAC,CACJ,CACJ;IACL;EACJ,CAAC;EACD,oBACI;IAAA,wBACI;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eAEd;MAAM,QAAQ,EAAEN,WAAY;MAAA,wBACxB;QAAA,WAAK,UAED,uBAAC,KAAK;UACF,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,UAAU;UACf,QAAQ,EAAGK,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAC7C,EAAE,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QACf;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN;QAAA,WAAK,UAED,uBAAC,KAAK;UACF,IAAI,EAAC,UAAU;UACf,IAAI,EAAC,UAAU;UACf,QAAQ,EAAGH,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAC7C,EAAE,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QACf;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN,QAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,EAAE,EAAC,cAAc;QAAA,UAAC;MAExC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GAjEMf,SAAS;EAAA,QAGML,WAAW,EACXE,WAAW;AAAA;AAAA,KAJ1BG,SAAS;AAmEf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}