{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport blogService from '../services/blogs';\nimport loginService from '../services/login';\nconst initialState = {\n  username: null,\n  password: null\n};\nconst loginUserSlice = createSlice({\n  name: 'loginUser',\n  initialState: initialState,\n  reducers: {\n    setUser(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  setUser\n} = loginUserSlice.actions;\nexport const loginUser = userInput => {\n  return async dispatch => {\n    const loginUser = await loginService.login(userInput);\n    window.localStorage.setItem('loggedBlogappUser', JSON.stringify(loginUser));\n    await blogService.setToken(loginUser.token);\n    dispatch(setUser(loginUser));\n  };\n};\nexport const getUser = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(setUser(user));\n      blogService.setToken(user.token);\n    }\n  };\n};\nexport default loginUserSlice.reducer;","map":{"version":3,"names":["createSlice","blogService","loginService","initialState","username","password","loginUserSlice","name","reducers","setUser","state","action","payload","actions","loginUser","userInput","dispatch","login","window","localStorage","setItem","JSON","stringify","setToken","token","getUser","loggedUserJSON","getItem","user","parse","reducer"],"sources":["/usr/src/app/src/reducers/loginUserReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport blogService from '../services/blogs'\nimport loginService from '../services/login'\n\nconst initialState = {\n    username: null,\n    password: null,\n}\n\nconst loginUserSlice = createSlice({\n    name: 'loginUser',\n    initialState: initialState,\n    reducers: {\n        setUser(state, action) {\n            return action.payload\n        },\n    },\n})\n\nexport const { setUser } = loginUserSlice.actions\n\nexport const loginUser = (userInput) => {\n    return async (dispatch) => {\n        const loginUser = await loginService.login(userInput)\n        window.localStorage.setItem(\n            'loggedBlogappUser',\n            JSON.stringify(loginUser)\n        )\n        await blogService.setToken(loginUser.token)\n        dispatch(setUser(loginUser))\n    }\n}\n\nexport const getUser = () => {\n    return async (dispatch) => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            dispatch(setUser(user))\n            blogService.setToken(user.token)\n        }\n    }\n}\n\nexport default loginUserSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,YAAY,MAAM,mBAAmB;AAE5C,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,cAAc,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,WAAW;EACjBJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACNC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnB,OAAOA,MAAM,CAACC,OAAO;IACzB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAQ,CAAC,GAAGH,cAAc,CAACO,OAAO;AAEjD,OAAO,MAAMC,SAAS,GAAIC,SAAS,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMF,SAAS,GAAG,MAAMZ,YAAY,CAACe,KAAK,CAACF,SAAS,CAAC;IACrDG,MAAM,CAACC,YAAY,CAACC,OAAO,CACvB,mBAAmB,EACnBC,IAAI,CAACC,SAAS,CAACR,SAAS,CAAC,CAC5B;IACD,MAAMb,WAAW,CAACsB,QAAQ,CAACT,SAAS,CAACU,KAAK,CAAC;IAC3CR,QAAQ,CAACP,OAAO,CAACK,SAAS,CAAC,CAAC;EAChC,CAAC;AACL,CAAC;AAED,OAAO,MAAMW,OAAO,GAAG,MAAM;EACzB,OAAO,MAAOT,QAAQ,IAAK;IACvB,MAAMU,cAAc,GAAGR,MAAM,CAACC,YAAY,CAACQ,OAAO,CAAC,mBAAmB,CAAC;IACvE,IAAID,cAAc,EAAE;MAChB,MAAME,IAAI,GAAGP,IAAI,CAACQ,KAAK,CAACH,cAAc,CAAC;MACvCV,QAAQ,CAACP,OAAO,CAACmB,IAAI,CAAC,CAAC;MACvB3B,WAAW,CAACsB,QAAQ,CAACK,IAAI,CAACJ,KAAK,CAAC;IACpC;EACJ,CAAC;AACL,CAAC;AAED,eAAelB,cAAc,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}